#!/data/data/com.termux/files/usr/bin/bash
# Versi otomatis berdasarkan Git
VERSION=$(git describe --tags --always 2>/dev/null || echo "v0.0.0-dev")

# Cek apakah ingin menampilkan versi saja
if [[ "$1" == "--version" || "$1" == "-v" ]]; then
    echo "ADYT version $VERSION"
    exit 0
fi

figlet "YT Downloader"
echo "ADYT Downloader $VERSION"

while true; do
    read -p "Masukkan URL YouTube: " YTURL
     # Cek apakah kosong
    if [ -z "$YTURL" ]; then
        # Array dengan beberapa variasi pesan
        messages=("Ups, URL-nya belum diisi!"
                  "Sepertinya kamu lupa masukkan URL."
                  "URL kosong nih, coba cek lagi ya."
                  "Ayo, isi URL-nya dulu sebelum lanjut."
                  "URL masih kosong, bantu saya dengan mengisinya."
                  "Hmm, saya nggak menemukan URL di situ."
                  "URL-nya mana, ya? Nggak kelihatan."
                  "Biar saya bantu, tapi URL-nya tolong diisi dulu."
                  "Yuk, pastikan URL sudah dimasukkan."
                  "Belum ada URL yang terdeteksi."
                  "Hei, URL dibutuhkan untuk lanjut, loh."
                  "Tidak bisa melanjutkan tanpa URL, maaf."
                  "Saya perlu URL-nya dulu, baru bisa lanjut."
                  "URL hilang entah ke mana, coba isi lagi."
                  "Isi URL-nya dulu ya, baru kita lanjut."
                  "Sepertinya ada yang ketinggalan... yup, URL-nya!"
                  "URL tidak boleh kosong, ayo lengkapi dulu."
                  "Kita butuh URL untuk mulai, tolong isi ya."
                  "Proses dihentikan karena URL belum ada."
                  "URL belum masuk, padahal itu penting."
                  "Masukkan URL terlebih dahulu, yuk."
                  "URL-nya belum lengkap tuh."
                  "Wah, saya nggak bisa jalan tanpa URL."
                  "URL kosong, coba dicek dulu ya."
                  "Coba isi URL yang diperlukan dulu."
                  "URL-nya kemana? Saya tungguin, ya."
                  "Ada yang terlupa, yaitu URL-nya."
                  "Oops! URL masih kosong tuh."
                  "URL belum kebaca nih, coba ulangi."
                  "Isi URL dulu dong, biar saya bisa bantu."
                  "Tanpa URL, saya belum bisa mulai."
                  "Ayo dicek lagi, URL-nya belum ada."
                  "URL-nya ketinggalan tuh."
                  "URL-nya belum diinput, yuk isi sekarang."
                  "Tolong isi URL-nya dulu sebelum lanjut."
                  "URL masih kosong, silakan lengkapi dulu."
                  "Maaf, saya butuh URL agar bisa lanjut."
                  "Tanpa URL, perintah ini belum bisa diproses."
                  "Input URL tidak ditemukan, isi dulu ya."
                  "Saya butuh URL agar bisa melanjutkan tugas ini."
                  "Yuk, lengkapi input dengan URL."
                  "URL tidak tersedia, mohon dicek."
                  "URL kosong, proses tidak bisa dijalankan."
                  "Perintah gagal karena tidak ada URL."
                  "URL dibutuhkan, jangan dikosongkan ya."
                  "Input masih kosong, terutama bagian URL-nya."
                  "URL penting loh, jangan sampai lupa."
                  "Tanpa URL, saya bingung mau ngapain."
                  "URL belum saya temukan, mohon diisi."
                  "URL-nya kosong, jadi saya nggak bisa lanjut."
                  "Ayo isi URL biar kita bisa proses bareng!")       
        # Pilih pesan secara acak
        random_message=${messages[$RANDOM % ${#messages[@]}]}
        # Tampilkan pesan acak
        echo "$random_message"
        continue
    fi
    # Cek apakah URL valid YouTube
    if echo "$YTURL" | grep -Eq '^https?://(www\.)?(youtube\.com|youtu\.be)/'; then
        break  # keluar dari loop jika valid
    else
        echo "URL bukan dari YouTube. Coba lagi."
    fi
done

clear

echo "Mengambil daftar kualitas dari $YTURL..."
yt-dlp -F "$YTURL" > "$HOME/.yt_formats.txt"
# ===== TAMPILKAN VIDEO =====
echo "╔════════════════════════════════════════╗"
echo "║              FORMAT VIDEO              ║"
echo "╠════╦═════╦═══════════╦═════╦═══════════╣"
echo "║ No ║ ID  ║ Resolusi  ║ FPS ║   Size    ║"
echo "╠════╬═════╬═══════════╬═════╬═══════════╣"
awk '
/video only/ {
    no+=1
    id=$1
    res=$3
    fps=$4
    size="?"
    for (i=1;i<=NF;i++) {
        if ($i ~ /MiB/ || $i ~ /KiB/) {
            size=$i
            break
        }
    }
    printf "║ %-2d ║ %-3s ║ %-9s ║ %-3s ║ %-9s ║\n", no, id, res, fps, size
    map[no]=id
}
END { 
     print "╚════╩═════╩═══════════╩═════╩═══════════╝"
     for (i in map) print map[i] > "'$HOME'/.vid_id_map.txt" }
' "$HOME/.yt_formats.txt"

read -p "Pilih nomor video (kosongkan jika ingin audio saja): " VIDNUM
VIDFORMAT=""
if [ -n "$VIDNUM" ]; then
    VIDFORMAT=$(sed -n "${VIDNUM}p" "$HOME/.vid_id_map.txt")
fi

# ===== TAMPILKAN AUDIO =====
echo "╔════════════════════════════════════════════════════════════════╗"
echo "║                          FORMAT AUDIO                          ║"
echo "╠════╦═════╦═══════════════╦═════════════════╦═══════════════════╣"
echo "║ No ║ ID  ║ Total Bitrate ║ Average Bitrate ║ Audio Sample Rate ║"
echo "╠════╬═════╬═══════════════╬═════════════════╬═══════════════════╣"
awk '
BEGIN {
    FS = " +"
    no = 0
    found_header = 0
}
# Temukan posisi kolom dari header
/^ID[ \t]+EXT/ {
    for (i = 1; i <= NF; i++) {
        if ($i == "ID") id_col = i
        else if ($i == "TBR") tbr_col = i
        else if ($i ~ /ABR/) abr_col = i
        else if ($i == "ASR") asr_col = i
    }
    found_header = 1
    next
}

# Proses baris setelah header, hanya jika semua kolom tersedia
found_header && /audio only/ {
    id  = (id_col ? $id_col : "")
    tbr = (tbr_col ? $tbr_col : "")
    abr = (abr_col ? $abr_col : "")
    asr_raw = (asr_col ? $asr_col : "")

    # Konversi ASR misalnya 44k menjadi 44100 Hz
        if (asr_raw ~ /^[0-9]+k$/) {
            rate = substr(asr_raw, 1, length(asr_raw)-1)
            asr = rate * 1000 " Hz"
        } else {
            asr = "?"
        }

    # Cek apakah semua field terisi
    if (id != "" && tbr != "" && abr != "" && asr != "") 
    {
        no++
        abr_display = abr
        gsub(/k$/, " kbps", abr_display)
 	    tbr_display = tbr
	    gsub(/k$/, " kbps", tbr_display)
        printf "║ %-2d ║ %-3s ║ %-13s ║ %-15s ║ %-17s ║\n", no, id, tbr_display, abr_display, asr
        map[no] = id
    }
}

END {
	 print "╚════╩═════╩═══════════════╩═════════════════╩═══════════════════╝"
    for (i in map)
        print map[i] > "'$HOME'/.aud_id_map.txt"
}
' "$HOME/.yt_formats.txt"

read -p "Pilih nomor audio: " AUDNUM
AUDFORMAT=$(sed -n "${AUDNUM}p" "$HOME/.aud_id_map.txt")

if [ -z "$AUDFORMAT" ]; then
    echo "Audio tidak dipilih. Keluar."
    exit 1
fi

# ===== GABUNGKAN FORMAT =====
if [ -n "$VIDFORMAT" ]; then
    FORMAT="${VIDFORMAT}+${AUDFORMAT}"
else
    FORMAT="$AUDFORMAT"
fi

# ===== FORMAT OUTPUT =====
echo
echo "========== PILIH FORMAT OUTPUT =========="
echo "1) mp4"
echo "2) webm"
echo "3) mp3 (audio saja)"
read -p "Pilih: " OUTEXT

case $OUTEXT in
    1) EXT="mp4" ;;
    2) EXT="webm" ;;
    3) EXT="mp3" ;;
    *) echo "Pilihan tidak valid. Default ke mp4."; EXT="mp4" ;;
esac

# ===== LOKASI SIMPAN =====
TEMPPATH="$HOME/downloads/yt"
mkdir -p "$TEMPPATH"

# ===== MULAI DOWNLOAD =====
echo "Download ke: $TEMPPATH (format: $EXT)"
yt-dlp -f "$FORMAT" -o "$TEMPPATH/%(title).100s.%(ext)s" \
         --merge-output-format "$EXT" --external-downloader aria2c \
         --external-downloader-args aria2c:"-x 16 -s 16 -k 1M" --no-warnings "$YTURL"


FILENAME=$(yt-dlp -f "$FORMAT" -o "$TEMPPATH/%(title).100s.%(ext)s" \
           --merge-output-format "$EXT" --print filename "$YTURL")

BASE="$HOME/storage/shared/"
while true; do
    CHOICE=$(find "$BASE" -maxdepth 1 -mindepth 1 -type d ! -name ".*" | fzf --prompt="Pilih folder di: $BASE ")

    # Jika tidak ada pilihan (user tekan Esc), keluar dari loop
    if [ -z "$CHOICE" ]; then
        break
    fi

    # Set folder yang dipilih sebagai base baru untuk iterasi berikutnya
    BASE="$CHOICE"
done

SAVEPATH="$BASE"
echo "Folder akhir: $SAVEPATH"

# Jika tidak dipilih (misalnya tekan Esc), gunakan default
if [ -z "$SAVEPATH" ]; then
    SAVEPATH="$HOME/downloads/yt"
fi

mkdir -p "$SAVEPATH"
#pindahkan ke path yg dipilih
mv "$FILENAME" "$SAVEPATH"

# ===== BERSIHKAN SEMENTARA =====
rm -f "$HOME/.yt_formats.txt" "$HOME/.vid_id_map.txt" "$HOME/.aud_id_map.txt"
